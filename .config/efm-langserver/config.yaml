version: 2
root-markers:
  - .git/
lint-debounce: 1s
tools:
  markdown-textlint: &markdown-textlint
    # installation
    # deno cache --node-modules-dir npm:textlint@latest npm:textlint-rule-prh@latest npm:textlint-rule-preset-jtf-style@latest npm:textlint-rule-preset-ja-technical-writing@latest
    # lint-command: 'deno run -A --node-modules-dir npm:textlint@latest --format unix --stdin --stdin-filename ${INPUT}'
    #
    # npm install --save-dev textlint-rule-prh textlint-rule-preset-jtf-style textlint-rule-preset-ja-technical-writing
    lint-command: npx textlint --format unix --stdin --stdin-filename ${INPUT}
    lint-ignore-exit-code: true
    lint-stdin: true
    lint-formats:
      - '%f:%l:%c: %m [%trror/%r]'
    root-markers:
      - .textlintrc
      - .textlintrc.json
  ruby-rubocop: &ruby-rubocop
      lint-command: 'bundle exec rubocop --format emacs --force-exclusion --stdin ${INPUT}'
      lint-formats:
        - '%f:%l:%c: %m'
      lint-stdin: true
      root-markers:
        - Gemfile
        - Rakefile
        - .rubocop.yml
      format-command: 'bundle exec rubocop -A -f quiet --stderr -s ${INPUT} || exit 0'
      format-stdin: true
  ruby-standard: &ruby-standardrb
    lint-command: 'standardrb --no-fix ${INPUT}'
    lint-formats:
      - "%f:%l:%c: %t: %m"
    format-command: 'standardrb --fix ${INPUT} || exit 0'
    format-stdin: true


languages:
  markdown:
    - <<: *markdown-textlint
  ruby:
    - <<: *ruby-rubocop
    - <<: *ruby-standardrb
