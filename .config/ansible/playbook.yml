# ansible-playbook -K --start-at='Install AWS eksctl' --step ~/.config/ansible/playbook.yml

- hosts: 127.0.0.1
  connection: local
  user: iberianpig
  tasks:
    - name: get upstream codename
      shell: lsb_release -sc # error latest ubuntu => shell: lsb_release -usc
      register: upstream

    - debug: var=upstream.stdout  # bionic

    - name: apt install curl
      apt: name={{ item }} update_cache=no
      become: true
      with_items:
        - curl

    - name: install pip3
      shell: |
        which pip3 && exit 0
        dest=/tmp/get-pip.py
        curl -L https://bootstrap.pypa.io/get-pip.py -o $dest
        python3 $dest

    - name: add Docker CE apt gpg
      shell: curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -
      become: true
      args:
        warn: no

    - name: add Docker CE apt repository
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ upstream.stdout  }} stable
        state: present
      become: true

    - name: install gh
      shell: |
        which gh && exit 0
        url=$(curl --silent https://api.github.com/repos/cli/cli/releases/latest | jq -r '.assets[] | select(.name | test("linux_amd64.deb")).browser_download_url')
        curl -L $url -o /tmp/gh.deb && dpkg -i /tmp/gh.deb
      become: true
      args:
        warn: no


    - name: add apt repositories
      apt_repository: repo={{ item }}
      become: true
      with_items:
        - ppa:numix/ppa
        - ppa:git-core/ppa
        # - ppa:openjdk-r/ppa flutter

    - name: apt install
      apt: name={{ item }} update_cache=yes cache_valid_time=36
      become: true
      with_items:
        - apt-transport-https        # for docker
        - ca-certificates            # for docker
        - gnupg2                     # for docker
        - software-properties-common # for docker
        - docker-ce
        - dconf-editor
        - gconf-editor
        - guake
        - git
        - tig
        - ranger
        - fcitx-mozc
        - byobu
        - jq
        - direnv
        - tlp
        - powertop
        - numix-icon-theme-circle
        - xclip
        # - vim-gnome
        # - vim-gtk
        - synaptic
        - gdebi
        - xbindkeys
        - libinput-tools
        # - elementary-tweaks
        - make
        - automake
        - autoconf
        - pkg-config
        - tree
        - gcc
        - snapd
        - gparted
        - etckeeper
        - libreadline-dev
        - wmctrl
        - xdotool
        - shellcheck
        - global
        - baobab
        # - libmysqlclient-dev # for mysql2 gem
        # - mysql-server
        - tmate
        # - libgnome2-bin # gnome-open
        # - lib32stdc++6 # flutter dependency
        # - openjdk-8-jdk # flutter dependency
        - gh
        - libevdev-tools
    - name: snap install
      command: snap install {{ item }}
      become: true
      with_items:
        - bitwarden
        - bw
        - authy
        # - slack --classic # it doesn't works with fcitx
        # - spotify # use too much CPU resouces
        # - libreoffice # cant open local file
        - hub --classic
        - go --classic
        # - remmina # remmina can't read config on /home/ 
        # - ngrok   # ngrok   can't read config on /home/ 
        # - fwupd --classic # only for ubuntu (not pop os)

    - name: diff-highlight
      shell: |
        ls -L /usr/local/bin/diff-highlight && exit 0 
        cd /usr/share/doc/git/contrib/diff-highlight
        make
        chmod a+x /usr/share/doc/git/contrib/diff-highlight/diff-highlight
        ln -s /usr/share/doc/git/contrib/diff-highlight/diff-highlight /usr/local/bin/diff-highlight
        chmod a+x /usr/local/bin/diff-highlight
      become: true
      args:
        warn: no

    - name: fzf
      shell: |
        which fzf && exit 0
        git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf
        ~/.fzf/install --all

    - name: pip install
      pip: name={{item}} executable=pip3 state=latest
      with_items:
        - vim-vint
        # - wakatime

    - name: nvm
      shell: >
        curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.3/install.sh | bash
      args:
        creates: "{{ ansible_env.HOME }}/.nvm/nvm.sh"

    - name: add $USER Docker group
      user: name=iberianpig groups=docker append=yes
      become: true

    - name: Download Terminal hybrid color schemes
      get_url:
        url: https://gist.github.com/iberianpig/95ba787d302c9cd5b0ef/raw/79e5d1272b9188d27ef15de9a53c66b3974ab600/hybrid-pantheon.sh
        dest: /tmp

    - name: set color schemes
      command: bash /tmp/hybrid-pantheon.sh

    # - name: Install docker-compose # requrie 1.20 or later to use detachKeys in ~/.docker/config.json
    #   shell: |
    #     which docker-compose && exit 0
    #     dest=/usr/local/bin/docker-compose
    #     version=$(curl --silent https://api.github.com/repos/docker/compose/releases/latest | jq .name -r)
    #     curl -L https://github.com/docker/compose/releases/download/$version/docker-compose-$(uname -s)-$(uname -m) -o $dest
    #     chmod a+x $dest
    #   args: 
    #     creates: /usr/local/bin/docker-compose
    #   become: true

    - name: Install Vagrant
      shell: |
        which vagrant && exit 0
        curl -L https://releases.hashicorp.com/vagrant/2.2.5/vagrant_2.2.5_x86_64.deb -o /tmp/vagrant.deb && dpkg -i /tmp/vagrant.deb
      become: true
      args:
        warn: no

    - name: Install AWS ECS CLI
      shell: |
        which ecs-cli && exit 0
        dest=/usr/local/bin/ecs-cli
        curl -o $dest https://amazon-ecs-cli.s3.amazonaws.com/ecs-cli-linux-amd64-latest
        chmod a+x $dest
      become: true
      args:
        warn: no

    - name: Install AWS CLI # apt repository of awscli is too old
      shell: |
        which aws && exit 0
        dest=/tmp
        zip=$dest/awscli.zip
        curl -o $zip https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip
        unzip $zip -d $dest
        $dest/aws/install
      become: true
      args:
        warn: no

    - name: Install AWS eksctl
      shell: |
        which eksctl && exit 0
        archive=/tmp/eksctl.tar.gz
        dest=/usr/local/bin
        curl -L -o $archive https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz
        tar xvf $archive -C $dest
      become: true
      args:
        warn: no

    # - name: Install Fusuma
    #   command: gem install fusuma

    - name: add $USER Input group
      user: name=iberianpig groups=input append=yes
      become: true

    - name: install calibre
      shell: |
        which calibre && exit 0
        curl https://download.calibre-ebook.com/linux-installer.sh | bash
      become: true
      args:
        warn: no

    - name: install nvm
      shell: |
        which nvm && exit 0
        version=v0.36.0
        curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/$version/install.sh | bash
      args:
        warn: no

    - name: install ghq
      shell: |
        which ghq && exit 0
        go install github.com/x-motemen/ghq@latest
      args:
        warn: no

    - name: ghq get
      command: ghq get {{ item }}
      with_items:
        - iberianpig/fusuma
        - iberianpig/fusuma-plugin-appmatcher
        - iberianpig/fusuma-plugin-keypress
        - iberianpig/fusuma-plugin-sendkey
        - iberianpig/fusuma-plugin-tap
        - iberianpig/fusuma-plugin-wmctrl
        - iberianpig/ranger-explorer.vim
        - iberianpig/tig-explorer.vim
        - iberianpig/makef

